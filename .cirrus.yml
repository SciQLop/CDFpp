macos_instance:
  image: ghcr.io/cirruslabs/macos-monterey-base:latest

build_script_template: &BUILD_SCRIPT_TEMPLATE
  build_script: |
    brew install gcc@11 pyenv
    pyenv install ${PYTHON_VERSION}
    pyenv local ${PYTHON_VERSION}
    pip3 install meson build wheel twine
    CC=gcc-11 CXX=g++-11 python3 scripts/build_wheel.py

env:
  GITHUB_TOKEN: ENCRYPTED[b5d25acd3412fce54a451c9da6175903eaf78a047a033f7b6e39296326b13535d3490dbbe0c4dc158e373e9bb22fa7e1]

task:
  name: build release wheel for Python ${PYTHON_VERSION}
  only_if: $CIRRUS_TAG != ''
  environment:
    PYPI_PASSWORD: ENCRYPTED[!7bc03c3f6669a219ca28bf887e2e44110caf139ef9586119b9c589c10074fbbd0b8abd3a6fe01480dad5dbef9b2330bb!]
    TESTPYPI_PASSWORD: ENCRYPTED[!8eaf98f5cf6092969efc4029358a2cb8819bdd8c5f17b98781a3b9e8ce7430f1004edb3a68afb322efa14097b8f10585!]
    TWINE_USERNAME: __token__
    PATH: ~/.pyenv/shims:${PATH}
    matrix:
      - PYTHON_VERSION: 3.10.4
      - PYTHON_VERSION: 3.9.13
      - PYTHON_VERSION: 3.8.10
  << : *BUILD_SCRIPT_TEMPLATE
  upload_script: |
    #!/usr/bin/env bash
    # stolen here:
    #https://github.com/joseluisq/paket/blob/5708e9b56ee9a3f871ca1ae8c679350083064069/.cirrus.yml
    set -e

    brew install jq

    if [[ "$GITHUB_TOKEN" == "" ]]; then
      echo "GitHub access token GITHUB_TOKEN env is not provided!"
      exit 1
    fi

    RETRIES=0
    until [ $RETRIES -eq 20 ]
    do
      echo "Finding the GitHub release associated with '$CIRRUS_TAG' tag..."
      CIRRUS_RELEASE=$(curl -sL -H "Authorization: token $GITHUB_TOKEN" -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/$CIRRUS_REPO_FULL_NAME/releases | jq -c "[ .[] | select( .tag_name | contains(\"$CIRRUS_TAG\")) ] | .[0]" | jq -r '.id')
      [[ "$CIRRUS_RELEASE" != "null" ]] && break
      RETRIES=$((RETRIES+1))
      sleep 30
    done

    echo $CIRRUS_RELEASE $CIRRUS_TAG

    if [[ "$CIRRUS_RELEASE" == "null" ]]; then
        echo "This is not a release, will push to test.pypi"
        export TWINE_REPOSITORY=testpypi
        export TWINE_PASSWORD=$TESTPYPI_PASSWORD
    else
        echo "This is a release, will push to pypi"
        export TWINE_REPOSITORY=pypi
        export TWINE_PASSWORD=$PYPI_PASSWORD
    fi

    twine upload --skip-existing dist/*
  wheels_artifacts:
    path: "dist/*"


task:
  name: build test wheel for Python ${PYTHON_VERSION}
  only_if: $CIRRUS_TAG == ''
  environment:
    TWINE_PASSWORD: ENCRYPTED[!8eaf98f5cf6092969efc4029358a2cb8819bdd8c5f17b98781a3b9e8ce7430f1004edb3a68afb322efa14097b8f10585!]
    TWINE_USERNAME: __token__
    TWINE_REPOSITORY: testpypi
    PATH: ~/.pyenv/shims:${PATH}
    matrix:
      - PYTHON_VERSION: 3.10.4
      - PYTHON_VERSION: 3.9.13
      - PYTHON_VERSION: 3.8.10
  << : *BUILD_SCRIPT_TEMPLATE
  upload_script:
    twine upload --skip-existing dist/*
  wheels_artifacts:
    path: "dist/*"


